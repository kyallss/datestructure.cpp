#include <bits/stdc++.h>
using namespace std;

struct Date {
    int day;
    int month;
    int year;

    void newDate(int d, int m, int y) {
        day=d;
        month=m;
        year=y;
    }
   
    bool isValidDate() {
        if (year<0) 
            return false;

        if (month<1 || month>12) 
            return false;

        if (day<1 || day>daysInMonth()) 
            return false;

        return true;
    }

    int daysInMonth() {
    int days[]={31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        return days[month-1];
    }

    string monthToString(int month) {
        switch (month) {
            case 1: return "January";
            case 2: return "February";
            case 3: return "March";
            case 4: return "April";
            case 5: return "May";
            case 6: return "June";
            case 7: return "July";
            case 8: return "August";
            case 9: return "September";
            case 10: return "October";
            case 11: return "November";
            case 12: return "December";
            default: return "Invalid Month";
        }
    }

    void printDate() {
        if (isValidDate()) {
            cout << monthToString(month) << " " << day << ", " << year << " is ";
            printDayOfWeek();
        } else {
            cout << "Invalid Date" << endl;
        }
    }

    void printDayOfWeek() {
        int monthVal=month;
        int yearVal=year;

        if (monthVal==1 || monthVal==2) {
            monthVal+=12;
            yearVal-=1;
        }

        int j=yearVal/100;
        int k=yearVal%100;
        int h=(day+13*(monthVal+1)/5+k+k/4+j/4+5*j)%7;

        string dayOfWeek;
        switch (h) {
            case 0:
                dayOfWeek="Saturday";
                break;
            case 1:
                dayOfWeek="Sunday";
                break;
            case 2:
                dayOfWeek="Monday";
                break;
            case 3:
                dayOfWeek="Tuesday";
                break;
            case 4:
                dayOfWeek="Wednesday";
                break;
            case 5:
                dayOfWeek="Thursday";
                break;
            case 6:
                dayOfWeek="Friday";
                break;
            default:
                dayOfWeek="Invalid";
        }
        cout <<dayOfWeek<< endl;
    }

    bool operator<(const Date& date) {
        if (year<date.year) return true;
        if (year>date.year) return false;
        if (month<date.month) return true;
        if (month>date.month) return false;
        return day<date.day;
    }
};

int main() {
    Date date1;
    date1.newDate(13, 4, 2024);
    Date date2;
    date2.newDate(31, 2, 2024);
    Date date3;
    date3.newDate(2, 5, 2021);

    cout << "date1: ";
    date1.printDate();
    cout << "date2: ";
    date2.printDate();
    cout << "date3: ";
    date3.printDate();

    vector<Date> dates;
    dates.push_back(date1);
    dates.push_back(date2);
    dates.push_back(date3);
    
    sort(dates.begin(), dates.end());
    
    for(auto d : dates)
        d.printDate();

}
